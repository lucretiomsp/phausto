name: Run Tests

on:
  # Run on push and pull requests on any branch, but ignore if change doesn't affect code.
  push:
    paths-ignore:
    - 'README.md'
  pull_request:
    paths-ignore:
    - 'README.md'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    strategy:
      # Default value means that a failure in one OS cancels all 
      fail-fast: false
      matrix:
        smalltalk: [ Pharo64-12 ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        ston: [ .smalltalk.ston ]
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.smalltalk }} on ${{ matrix.os }}
    steps:
      - name: Checkout Phausto
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup smalltalkCI
        uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: ${{ matrix.smalltalk }}

      - name: Install Libraries Bundle (M1)
        run: (hdiutil attach "/Users/runner/work/phausto/phausto/phaustoLibrariesM1.dmg" -mountpoint /Volumes/phaustoLibrariesM1 -nobrowse -readonly && mkdir -p "/Users/runner/.smalltalkCI/_builds/librariesBundle" && cp -R /Volumes/phaustoLibrariesM1/* "/Users/runner/.smalltalkCI/_builds/librariesBundle"); hdiutil detach /Volumes/phaustoLibrariesM1 && ls -all "/Users/runner/.smalltalkCI/_builds/librariesBundle" && ls -all "/Users/runner/.smalltalkCI/_builds/librariesBundle/faustLibs"
        if: ${{ contains(matrix.os, 'macos') }}

      - name: Install Libraries Bundle (ubuntu)
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: |
          set -euo pipefail  # Fail on errors, unset variables, and piped commands

          BUILD_DIR="$HOME/.smalltalkCI/_builds/librariesBundle"
          ZIP_FILE="$GITHUB_WORKSPACE/librariesBundle_Linux.zip"

          echo "Creating build directory..."
          mkdir -p "$BUILD_DIR"

          echo "Unzipping libraries bundle..."
          unzip -q "$ZIP_FILE" -d "$BUILD_DIR"

          echo "Moving top-level .so files to $BUILD_DIR..."
          shopt -s nullglob
          SO_FILES=("$BUILD_DIR"/librariesBundle/*.so)
          if [ ${#SO_FILES[@]} -gt 0 ]; then
          mv "$BUILD_DIR"/librariesBundle/*.so "$BUILD_DIR"/
          else
          echo "No top-level .so files found, skipping move."
          fi

          echo "Listing final build directory structure..."
          ls -al "$BUILD_DIR"
          if [ -d "$BUILD_DIR/faustLibs" ]; then
          echo "Listing faustLibs directory..."
          ls -al "$BUILD_DIR/faustLibs"
          else
          echo "No faustLibs directory found."
          fi

          ENGINE_LIB="$BUILD_DIR/libdynamic-engine.so"
          if [ -f "$ENGINE_LIB" ]; then
          echo "Checking symbols in libdynamic-engine.so..."
          nm "$ENGINE_LIB" | head -20
          else
          echo "libdynamic-engine.so not found!"
          exit 1
          fi






      - name: Install Libraries Bundle (win)
        run: unzip "D:\a\phausto\phausto\librariesBundle_windows_intel.zip" -d "C:\Users\runneradmin\.smalltalkCI\_builds" && dir "C:\Users\runneradmin\.smalltalkCI\_builds\librariesBundle"
        if: ${{ contains(matrix.os, 'win') }}

      - name: Load Image and Run Tests
        run: smalltalkci -s ${{ matrix.smalltalk }} ${{ matrix.ston }}
        shell: bash
        timeout-minutes: 20
